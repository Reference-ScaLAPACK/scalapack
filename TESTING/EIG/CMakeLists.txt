if (CMAKE_Fortran_COMPILER_ID STREQUAL "GNU" AND CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER_EQUAL 10)
  add_compile_options("$<$<COMPILE_LANGUAGE:Fortran>:-fallow-argument-mismatch;-std=legacy>")
endif()


set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/..)

set (smatgen psmatgen.f pmatgeninc.f)
set (dmatgen pdmatgen.f pmatgeninc.f)
set (cmatgen pcmatgen.f pmatgeninc.f)
set (zmatgen pzmatgen.f pmatgeninc.f)

function(_eig_test name src N)
  add_executable(${name} ${src})
  target_link_libraries(${name} PRIVATE scalapack ${LAPACK_LIBRARIES} ${BLAS_LIBRARIES} MPI::MPI_Fortran)

  add_test(NAME ${name}
  COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${N} ${MPIEXEC_PREFLAGS} $<TARGET_FILE:${name}>
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
  )
endfunction()

if(BUILD_SINGLE)
  _eig_test(xsbrd "psbrddriver.f;psbrdinfo.f;psgebdrv.f;pslafchk.f;${smatgen}" 2)
  _eig_test(xshrd "pshrddriver.f;pshrdinfo.f;psgehdrv.f;pslafchk.f;${smatgen}" 2)
  _eig_test(xstrd "pstrddriver.f;psttrdtester.f;pslatran.f;pstrdinfo.f;pssytdrv.f;pslafchk.f;xpjlaenv.f;${smatgen}" 2)
  _eig_test(xssvd "pssvddriver.f;pslagge.f;pssvdchk.f;pssvdcmp.f;pssvdtst.f;${smatgen}" 4)
  _eig_test(xssep "psseptst.f;pssepsubtst.f;pssepchk.f;pssepqtq.f;pslagsy.f;pslatms.f;pslasizesep.f;pslasizesyevx.f;pssepdriver.f;pssepreq.f;pssepinfo.f;pslasizesyev.f;pssqpsubtst.f;pslasizesqp.f;pssdpsubtst.f;${smatgen}" 4)
  _eig_test(xsgsep "psgseptst.f;psgsepsubtst.f;psgsepchk.f;pslagsy.f;pslatms.f;pslasizesyevx.f;pslasizegsep.f;pslasizesep.f;psgsepdriver.f;psgsepreq.f;pssepinfo.f;${smatgen}" 4)
  _eig_test(xsnep "psnepdriver.f;psnepinfo.f;psnepfchk.f;${smatgen}" 2)
  _eig_test(xssyevr "pslasizesepr.f;pslasizesyevr.f;psseprdriver.f;psseprreq.f;psseprsubtst.f;pssepchk.f;pssepqtq.f;pslatms.f;psseprtst.f;pssepinfo.f;pslagsy.f;pslasizesep.f;${smatgen}" 4)
  _eig_test(xshseqr "pshseqrdriver.f;psmatgen2.f;${cmatgen}" 2)
endif()
if(BUILD_SINGLE AND BUILD_DOUBLE)
  _eig_test(xdbrd "pdbrddriver.f;pdbrdinfo.f;pdgebdrv.f;pdlafchk.f;${dmatgen}" 2)
  _eig_test(xdhrd "pdhrddriver.f;pdhrdinfo.f;pdgehdrv.f;pdlafchk.f;${dmatgen}" 2)
  _eig_test(xdtrd "pdtrddriver.f;pdttrdtester.f;pdlatran.f;pdtrdinfo.f;pdsytdrv.f;pdlafchk.f;xpjlaenv.f;${dmatgen}" 2)
  _eig_test(xdsvd "pdsvddriver.f;pdlagge.f;pdsvdchk.f;pdsvdcmp.f;pdsvdtst.f;${dmatgen}" 4)
  _eig_test(xdsep "pdseptst.f;pdsepsubtst.f;pdsepchk.f;pdsepqtq.f;pdlagsy.f;pdlatms.f;pdlasizesep.f;pdlasizesyevx.f;pdsepdriver.f;pdsepreq.f;pdsepinfo.f;pdlasizesyev.f;pdsqpsubtst.f;pdlasizesqp.f;pdsdpsubtst.f;${dmatgen}" 4)
  _eig_test(xdgsep "pdgseptst.f;pdgsepsubtst.f;pdgsepchk.f;pdlagsy.f;pdlatms.f;pdlasizesyevx.f;pdlasizegsep.f;pdlasizesep.f;pdgsepdriver.f;pdgsepreq.f;pdsepinfo.f;${dmatgen}" 4)
  _eig_test(xdnep "pdnepdriver.f;pdnepinfo.f;pdnepfchk.f;${dmatgen}" 2)
  _eig_test(xdsyevr "pdlasizesepr.f;pdlasizesyevr.f;pdseprdriver.f;pdseprreq.f;pdseprsubtst.f;pdsepchk.f;pdsepqtq.f;pdlatms.f;pdseprtst.f;pdsepinfo.f;pdlagsy.f;pdlasizesep.f;${dmatgen}" 4)
  _eig_test(xdhseqr "pdhseqrdriver.f;pdmatgen2.f;${cmatgen}" 2)
endif()
if(BUILD_COMPLEX)
  _eig_test(xcbrd "pcbrddriver.f;pcbrdinfo.f;pcgebdrv.f;pclafchk.f;${cmatgen}" 2)
  _eig_test(xchrd "pchrddriver.f;pchrdinfo.f;pcgehdrv.f;pclafchk.f;${cmatgen}" 2)
  _eig_test(xctrd "pctrddriver.f;pcttrdtester.f;pclatran.f;pctrdinfo.f;pchetdrv.f;pclafchk.f;xpjlaenv.f;${cmatgen}" 2)
  _eig_test(xcsep "pcseptst.f;pcsepsubtst.f;pcsepchk.f;pcsepqtq.f;pclagsy.f;pclatms.f;pclasizesep.f;pclasizeheevx.f;pcsepdriver.f;pcsepreq.f;pssepinfo.f;pcsdpsubtst.f;${cmatgen}" 4)
  _eig_test(xcgsep "pcgseptst.f;pcgsepsubtst.f;pcgsepchk.f;pclagsy.f;pclatms.f;pclasizegsep.f;pclasizeheevx.f;pclasizesep.f;pcgsepdriver.f;pcgsepreq.f;pssepinfo.f;${cmatgen}" 4)
  _eig_test(xcnep "pcnepdriver.f;pcnepinfo.f;pcnepfchk.f;${cmatgen}" 2)
  _eig_test(xcevc "pcevcdriver.f;pcevcinfo.f;pcget22.f;${cmatgen}" 2)
  _eig_test(xcheevr "pclasizesepr.f;pclasizeheevr.f;pcseprdriver.f;pcseprreq.f;pcseprsubtst.f;pcsepchk.f;pcsepqtq.f;pclatms.f;pcseprtst.f;pssepinfo.f;pclagsy.f;pclasizesep.f;${cmatgen}" 4)
endif()
if(BUILD_SINGLE AND BUILD_COMPLEX16)
  _eig_test(xzbrd "pzbrddriver.f;pzbrdinfo.f;pzgebdrv.f;pzlafchk.f;${zmatgen}" 2)
  _eig_test(xzhrd "pzhrddriver.f;pzhrdinfo.f;pzgehdrv.f;pzlafchk.f;${zmatgen}" 2)
  _eig_test(xztrd "pztrddriver.f;pzttrdtester.f;pzlatran.f;pztrdinfo.f;pzhetdrv.f;pzlafchk.f;xpjlaenv.f;${zmatgen}" 2)
  _eig_test(xzsep "pzseptst.f;pzsepsubtst.f;pzsepchk.f;pzsepqtq.f;pzlagsy.f;pzlatms.f;pzlasizesep.f;pzlasizeheevx.f;pzsepdriver.f;pzsepreq.f;pdsepinfo.f;pzsdpsubtst.f;${zmatgen}" 4)
  _eig_test(xzgsep "pzgseptst.f;pzgsepsubtst.f;pzgsepchk.f;pzlagsy.f;pzlatms.f;pzlasizegsep.f;pzlasizeheevx.f;pzlasizesep.f;pzgsepdriver.f;pzgsepreq.f;pdsepinfo.f;${zmatgen}" 4)
  _eig_test(xznep "pznepdriver.f;pznepinfo.f;pznepfchk.f;${zmatgen}" 2)
  _eig_test(xzevc "pzevcdriver.f;pzevcinfo.f;pzget22.f;${zmatgen}" 2)
  _eig_test(xzheevr "pzlasizesepr.f;pzlasizeheevr.f;pzseprdriver.f;pzseprreq.f;pzseprsubtst.f;pzsepchk.f;pzsepqtq.f;pzlatms.f;pzseprtst.f;pdsepinfo.f;pzlagsy.f;pzlasizesep.f;${zmatgen}" 4)
endif()
