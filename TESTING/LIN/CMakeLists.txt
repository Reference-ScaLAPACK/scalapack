if (CMAKE_Fortran_COMPILER_ID STREQUAL "GNU" AND CMAKE_Fortran_COMPILER_VERSION VERSION_GREATER_EQUAL 10)
  add_compile_options("$<$<COMPILE_LANGUAGE:Fortran>:-fallow-argument-mismatch;-std=legacy>")
endif()


set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/..)

set (smatgen psmatgen.f pmatgeninc.f)
set (dmatgen pdmatgen.f pmatgeninc.f)
set (cmatgen pcmatgen.f pmatgeninc.f)
set (zmatgen pzmatgen.f pmatgeninc.f)

set (slinchk pslaschk.f pslafchk.f)
set (dlinchk pdlaschk.f pdlafchk.f)
set (clinchk pclaschk.f pclafchk.f)
set (zlinchk pzlaschk.f pzlafchk.f)

function(_lin_test name src)
  set(N 2)

  add_executable(${name} ${src})
  target_link_libraries(${name} PRIVATE scalapack ${LAPACK_LIBRARIES} ${BLAS_LIBRARIES} MPI::MPI_Fortran)

  add_test(NAME ${name}
  COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${N} ${MPIEXEC_PREFLAGS} $<TARGET_FILE:${name}>
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
  )
endfunction()

if(BUILD_SINGLE)
  _lin_test(xslu "psludriver.f;psluinfo.f;psgetrrv.f;${smatgen};${slinchk}")
  _lin_test(xsdblu "psdbdriver.f;psdbinfo.f;psdblaschk.f;psdbmv1.f;psbmatgen.f;${smatgen}")
  _lin_test(xsdtlu "psdtdriver.f;psdtinfo.f;psdtlaschk.f;psdbmv1.f;psbmatgen.f;${smatgen}")
  _lin_test(xsgblu "psgbdriver.f;psgbinfo.f;psdblaschk.f;psgbmv1.f;psbmatgen.f;${smatgen}")
  _lin_test(xsllt "pslltdriver.f;pslltinfo.f;pspotrrv.f;${smatgen};${slinchk}")
  _lin_test(xspbllt "pspbdriver.f;pspbinfo.f;pspblaschk.f;pspbmv1.f;psbmatgen.f;${smatgen}")
  _lin_test(xsptllt "psptdriver.f;psptinfo.f;psptlaschk.f;pspbmv1.f;psbmatgen.f;${smatgen}")
  _lin_test(xsinv "psinvdriver.f;psinvinfo.f;psinvchk.f;${smatgen}")
  _lin_test(xsqr "psqrdriver.f;psqrinfo.f;psgeqrrv.f;psgeqlrv.f;psgelqrv.f;psgerqrv.f;pstzrzrv.f;pslafchk.f;${smatgen}")
  _lin_test(xsls "pslsdriver.f;pslsinfo.f;psqrt13.f;psqrt14.f;psqrt16.f;psqrt17.f;${smatgen}")
endif()
if(BUILD_SINGLE AND BUILD_DOUBLE)
  _lin_test(xdlu "pdludriver.f;pdluinfo.f;pdgetrrv.f;${dmatgen};${dlinchk}")
  _lin_test(xddblu "pddbdriver.f;pddbinfo.f;pddblaschk.f;pddbmv1.f;pdbmatgen.f;${dmatgen}")
  _lin_test(xddtlu "pddtdriver.f;pddtinfo.f;pddtlaschk.f;pddbmv1.f;pdbmatgen.f;${dmatgen}")
  _lin_test(xdgblu "pdgbdriver.f;pdgbinfo.f;pddblaschk.f;pdgbmv1.f;pdbmatgen.f;${dmatgen}")
  _lin_test(xdllt "pdlltdriver.f;pdlltinfo.f;pdpotrrv.f;${dmatgen};${dlinchk}")
  _lin_test(xdpbllt "pdpbdriver.f;pdpbinfo.f;pdpblaschk.f;pdpbmv1.f;pdbmatgen.f;${dmatgen}")
  _lin_test(xdptllt "pdptdriver.f;pdptinfo.f;pdptlaschk.f;pdpbmv1.f;pdbmatgen.f;${dmatgen}")
  _lin_test(xdinv "pdinvdriver.f;pdinvinfo.f;pdinvchk.f;${dmatgen}")
  _lin_test(xdqr "pdqrdriver.f;pdqrinfo.f;pdgeqrrv.f;pdgeqlrv.f;pdgelqrv.f;pdgerqrv.f;pdtzrzrv.f;pdlafchk.f;${dmatgen}")
  _lin_test(xdls "pdlsdriver.f;pdlsinfo.f;pdqrt13.f;pdqrt14.f;pdqrt16.f;pdqrt17.f;${dmatgen}")
endif()
if(BUILD_COMPLEX)
  _lin_test(xclu "pcludriver.f;pcluinfo.f;pcgetrrv.f;${cmatgen};${clinchk}")
  _lin_test(xcdblu "pcdbdriver.f;pcdbinfo.f;pcdblaschk.f;pcdbmv1.f;pcbmatgen.f;${cmatgen}")
  _lin_test(xcdtlu "pcdtdriver.f;pcdtinfo.f;pcdtlaschk.f;pcdbmv1.f;pcbmatgen.f;${cmatgen}")
  _lin_test(xcgblu "pcgbdriver.f;pcgbinfo.f;pcdblaschk.f;pcgbmv1.f;pcbmatgen.f;${cmatgen}")
  _lin_test(xcllt "pclltdriver.f;pclltinfo.f;pcpotrrv.f;${cmatgen};${clinchk}")
  _lin_test(xcpbllt "pcpbdriver.f;pcpbinfo.f;pcpblaschk.f;pcpbmv1.f;pcbmatgen.f;${cmatgen}")
  _lin_test(xcptllt "pcptdriver.f;pcptinfo.f;pcptlaschk.f;pcpbmv1.f;pcbmatgen.f;${cmatgen}")
  _lin_test(xcinv "pcinvdriver.f;pcinvinfo.f;pcinvchk.f;${cmatgen}")
  _lin_test(xcqr "pcqrdriver.f;pcqrinfo.f;pcgeqrrv.f;pcgeqlrv.f;pcgelqrv.f;pcgerqrv.f;pctzrzrv.f;pclafchk.f;${cmatgen}")
  _lin_test(xcls "pclsdriver.f;pclsinfo.f;pcqrt13.f;pcqrt14.f;pcqrt16.f;pcqrt17.f;${cmatgen}")
endif()
if(BUILD_SINGLE AND BUILD_COMPLEX16)
  _lin_test(xzlu "pzludriver.f;pzluinfo.f;pzgetrrv.f;${zmatgen};${zlinchk}")
  _lin_test(xzdblu "pzdbdriver.f;pzdbinfo.f;pzdblaschk.f;pzdbmv1.f;pzbmatgen.f;${zmatgen}")
  _lin_test(xzdtlu "pzdtdriver.f;pzdtinfo.f;pzdtlaschk.f;pzdbmv1.f;pzbmatgen.f;${zmatgen}")
  _lin_test(xzgblu "pzgbdriver.f;pzgbinfo.f;pzdblaschk.f;pzgbmv1.f;pzbmatgen.f;${zmatgen}")
  _lin_test(xzllt "pzlltdriver.f;pzlltinfo.f;pzpotrrv.f;${zmatgen};${zlinchk}")
  _lin_test(xzpbllt "pzpbdriver.f;pzpbinfo.f;pzpblaschk.f;pzpbmv1.f;pzbmatgen.f;${zmatgen}")
  _lin_test(xzptllt "pzptdriver.f;pzptinfo.f;pzptlaschk.f;pzpbmv1.f;pzbmatgen.f;${zmatgen}")
  _lin_test(xzinv "pzinvdriver.f;pzinvinfo.f;pzinvchk.f;${zmatgen}")
  _lin_test(xzqr "pzqrdriver.f;pzqrinfo.f;pzgeqrrv.f;pzgeqlrv.f;pzgelqrv.f;pzgerqrv.f;pztzrzrv.f;pzlafchk.f;${zmatgen}")
  _lin_test(xzls "pzlsdriver.f;pzlsinfo.f;pzqrt13.f;pzqrt14.f;pzqrt16.f;pzqrt17.f;${zmatgen}")
endif()
